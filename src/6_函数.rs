// !函数

// !要点
// 1. 函数名和变量名使用蛇形命名法(snake case)，例如 fn add_two() -> {}
// 2. 函数的位置可以随便放，Rust 不关心我们在哪里定义了函数，只要有定义即可
// 3. 每个函数参数都需要标注类型

// !函数参数
// 必须为每一个函数参数都标识出它的具体类型，否则就会报错
fn add(i: i32, j: i32) -> i32 {
    i + j
}

// !函数返回
// 函数的返回值就是函数体最后一条表达式的返回值
// 当然我们也可以使用 return 提前返回:
fn plus_five(x: i32) -> i32 {
    return x + 5;
}

// !Rust 中的特殊返回类型
// 无返回值()
// 1. 函数没有返回值，那么返回一个 ()
// 2. 结尾的表达式返回一个 ()

// !永不返回的发散函数 !
// 当用 ! 作函数返回类型的时候，表示该函数永不返回( diverge function )，特别的，这种语法往往用做会导致程序崩溃的函数：
fn dead_end() -> ! {
    panic!("你已经到了穷途末路，崩溃吧！");
}
